name: Build and Publish sdist and wheels on pypi
on: [push]

env:
  CIBW_BUILD_VERBOSITY: 3
  CIBW_BUILD: 'cp*'
  CIBW_SKIP: 'cp35-* cp36-* *-musllinux_* *-manylinux_i686'

jobs:
  build_wheels:
    name: Build wheels
    env:
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      CIBW_BEFORE_TEST: pip install pytest
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 20

      - run: |
          git fetch --tags

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build wheels on Linux
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL: |
            AEC_VERSION="1.0.4"
            HDF5_VERSION="1.12.1"

            yum update -y
            yum -y install zlib-devel
            pushd /tmp

            echo "Downloading & unpacking aec ${AEC_VERSION}"
            curl -fsSLO https://gitlab.dkrz.de/k202009/libaec/uploads/ea0b7d197a950b0c110da8dfdecbb71f/libaec-${AEC_VERSION}.tar.gz
            tar zxf libaec-$AEC_VERSION.tar.gz

            echo "Building & installing libaec"
            pushd libaec-$AEC_VERSION
            ./configure
            make -j 2
            make install
            ldconfig
            popd

            echo "Downloading & unpacking HDF5 ${HDF5_VERSION}"
            curl -fsSLO "https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-${HDF5_VERSION%.*}/hdf5-$HDF5_VERSION/src/hdf5-$HDF5_VERSION.tar.gz"
            tar -xzvf hdf5-$HDF5_VERSION.tar.gz

            echo "Building & installing HDF5"
            pushd hdf5-$HDF5_VERSION
            ./configure                      \
              --prefix=/usr                  \
              --enable-build-mode=production \
              --with-szlib                   \
              --enable-tools=no              \
              --enable-tests=no
            make -j 2
            make install
            ldconfig
            popd
          CIBW_BEFORE_BUILD: 'yum update -y; yum -y install boost169-devel'
          CIBW_ENVIRONMENT: BOOST_INCLUDEDIR='/usr/include/boost169' BOOST_LIBRARYDIR='/usr/lib64/boost169'
        run: |
          python -m cibuildwheel --output-dir dist

      - name: Store wheel as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 20
      - run: |
          git fetch --tags

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Build a source tarball
        run: |
          pip install build
          python -mbuild -s

      - name: Store sdist as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.tar.gz

  upload_artifacts:
    name: Upload wheels to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    runs-on: ubuntu-latest
    needs: [build_sdist, build_wheels]

    steps:
      - name: Download artifacts produced during the build_wheels and build_sdist jobs
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
